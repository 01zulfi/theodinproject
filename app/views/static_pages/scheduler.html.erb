<%= content_for :title, "The Odin Project -- Scheduler" %>
<%= stylesheet_link_tag "fullcalendar.css", media: "all" %>

<div class="container">
  <h1>Start Programming Together</h1>

  <div class="row">
    <div class="span4">
      <!-- <a onclick="displayEvents()">Events</a> -->
      <h4>Tips and Instructions</h4>
      <br>
      <h5>What is this?</h5>
      <p>
        This is a simple tool that you can use to set up a remote pairing session with someone else who is working on the same project as you.  
      </p>

      <h5>How Does it Work?</h5>
      <p>
        The calendar you are viewing now has already been filtered based on which project you're working on (!!!).  Change any of these filters in your <%= link_to "user settings page", "javascript:void(0)" %>.  How to use it:
        <ol>
          <li>Add when you're available to the calendar.  Just click or drag to add availability.  The new event will be auto-populated with the information specified on your <%= link_to "user settings page", "javascript:void(0)" %>.  You can edit this by clicking on it.</li>
          <li>Gray events represent when other users are available.  Click on these to get the contact information for these users.  If you find a time when you're both available, reach out and pair up!</li>
        </ol>
      </p>

      <h5>How do we Pair?</h5>
      <p>
        For best pairing, we recommend using two very easy tools: Skype and Screenhero.  Skype lets you chat with other users for free. Screenhero is like Skype for screen sharing.  Both are just one-click-to-call, and will let you talk while you're working on the same code base on one person's machine.
        <ul>
          <li>Setting up Skype: Download the free client at <%= link_to "Skype.com", "http://www.skype.com" %>, set up your user details, and "call" your partner.</li>
          <li>Setting up ScreenHero: Download the free client at <%= link_to "Screenhero.com", "http://www.screenhero.com" %>, set up your account, and "call" your partner to start sharing your screen.</li>
        </ul>
        Once you are able to talk to each other and you can both work on one of your screens, it's time to get coding!  There are a couple of approaches that work well, but they typically involve one person (the "driver") writing code while the other person (the "navigator") gives tactical guidance.
        <ul>
          <li>Time swapping: Spend 25 minutes as the driver, then swap roles.  Try using a <%= link_to "free online timer", "http://tomato-timer.com/" %>.</li>
          <li>Ping Pong: If you're using a test-driven approach, one person writes the failing test then the other person makes it pass.  Swap roles for the next test or batch of tests.</li>
        </ul>
        When you're done with your session, either share the github repo (if you're using a git workflow... please use a git workflow...) or email out the code to the partner whose computer hasn't been used.
      </p>
      <p>
        Finally, some tips:
        <ul>
          <li>Think out loud as much as you can -- give each other a chance to hear your thoughts.</li>
          <li>No distractions!  Emailing, texting, etc. should all be turned off while pairing. </li>
          <li>As navigator, wait 10 seconds before pointing out a typo... give the driver a chance to correct on their own</li>
          <li>Check out some additional resources:
            <ul>
              <li><%= link_to "Slideshare about pairing", "http://www.slideshare.net/rogercafe/pair-programming-presentation" %></li>
              <li><%= link_to "Listing of recorded online pairing sessions","http://www.youtube.com/playlist?list=PLjbL0BCR04Q1-x5p5L5V11Vm58VlTgPzw"%></li>
            </ul>
          </li>
        </ul>
      </p>
    </div>

    <div class="span8">
      <h4>When are you available?</h4>

      <script>
        $(document).ready(function(){
          var date = new Date();
          var d = date.getDate();
          var m = date.getMonth();
          var y = date.getFullYear();

          var calendar = $('#calendar').fullCalendar({
            header: {
              left: 'prev,next today',
              center: 'title',
              right: 'month,agendaWeek,agendaDay'
            },
            defaultView: 'agendaWeek',
            ignoreTimezone: false,
            firstHour: 8,
            editable: true,
            selectable: true,
            selectHelper: true,
            select: function(start, end, allDay) {
              console.log($(this));
              var summary = "Available"; //prompt('Event Title, Foo!');
              var description = 
                "Preferred: foo.bar (Skype) sAlternate: foo.bar@gmail.com (Email)"; //prompt('Enter Description, Foo!');
              if(summary) {
                $.ajax({
                  url: "<%= cal_events_url %>",
                  type: "POST",
                  data: {
                    start: start,
                    end: end,
                    allDay: allDay,
                    summary: summary,
                    description: description
                  },
                  success: function(event){
                    console.log("Success! Object is:");
                    console.log(event);
                    calendar.fullCalendar(
                      'renderEvent',
                      {
                        id: event.id,
                        url: event.url,
                        title: summary,
                        start: start,
                        end: end,
                        allDay: allDay,
                        editable: event.editable,
                        description: description
                      }
                    );
                  },
                  error: function(a,b,c){
                    console.log("ERROR!!!!");
                    console.log(a);
                    console.log(b);
                    console.log(c);
                  }
                })
              }
              calendar.fullCalendar('unselect');
            },
            eventSources: [   
              {
                url: "<%= cal_events_url %>"
              }
            ],
            eventRender: function(event, element) {
              element.attr('data-id', event.id);
              if(event.editable){
                element.attr('href', 'javascript:void(0);');
                element.on("click", function(){
                  openEditEventModal(event); 
                });
              } else {
                element.attr('href', 'javascript:void(0);');
                element.on('click', function(){
                  openEventInfoModal(event); 
                });
              }
            },
            eventDrop: updateEvent,
            disableDragging: false,
            eventResize: updateEvent
          });
        });


        // Open a modal window that displays the event's info
        function openEventInfoModal(event) { 
          console.log(event);
          console.log(event.title);
          
          // Populate it with info
          $(".eventInfo").html(event.description); 

          // Pop up the dialog
          $("#eventContent").dialog({ 
            modal: true, 
            width: 350,
            height: 300,
            title: event.title,
            position: {my: "center", at: "center", of: $("#calendar") },
            open: function(event, ui) { 
              $(".ui-dialog-titlebar-close").text("X"); 
            },
            buttons: {
              "close": function(){
                console.log($(this));
                $(this).dialog("close");
              }
            } 
          }); 
        };


        // Opens a form to input details for the newly created event
        function openEditEventModal(event){
          console.log(event);
          
          // Populate it with info
          $("#edit-event-info").val("").val(event.description); 

          // Pop up the dialog
          $("#edit-event-dialog-form").dialog({ 
            // autoOpen: false,
            modal: true, 
            width: 350,
            height: 300,
            position: {my: "center", at: "center", of: $("#calendar") },
            title: event.title,
            open: function() { 
              $(".ui-dialog-titlebar-close").text("X"); 
              $('<a />', {
                'id': 'delete-link',
                text: 'Delete',
                href: 'javascript:void(0);'
              })
                .appendTo($(".ui-dialog-buttonpane"))
                .click(function(el){
                  console.log($(this));
                  console.log(event);
                  $.ajax({
                    url: event.url,
                    type: "DELETE",
                    success: function(){
                      $("#edit-event-dialog-form").dialog('close');
                      $("#calendar").fullCalendar('refetchEvents');
                      $("#calendar").fullCalendar('rerenderEvents');
                    },
                    error: function(a,b,c){
                      console.log("ERROR!!!!");
                      console.log(a);
                      console.log(b);
                      console.log(c);
                    }
                  });
                });
            },
            buttons: {
              "update": function(){
                event.description = $("#edit-event-info").val();
                updateEvent(event);
                $(this).dialog("close");
              },
              "close": function(){
                $(this).dialog("close");
              }
            } 
          }).bind('dialogclose',function(){
            $("#delete-link").remove(); // or it will show up on the other info modal!
          }); 

          $("#edit-event-info").blur();
          $('.ui-dialog :button').focus();
        }

        function displayEvents(){
          $("#calendar").fullCalendar('clientEvents').forEach(function(event){
            console.log(event); 
          })
        }

        function updateEvent(event){
          calendar = $("#calendar");
          console.log("TRYING TO UPDATE THE EVENT!!!");
          console.log(event);
          $.ajax({
            url: event.url,
            type: "PUT",
            data: {
              start: event.start,
              end: event.end,
              allDay: event.allDay,
              summary: event.title,
              description: event.description
            },
            success: function(event){
              console.log("Success! Object is:");
              console.log(event);
              calendar.fullCalendar('rerenderEvents');
            },
            error: function(a,b,c){
              console.log("ERROR!!!!");
              console.log(a);
              console.log(b);
              console.log(c);
              calendar.fullCalendar('refetchEvents');
              calendar.fullCalendar('rerenderEvents');
            }
          });
        }

      </script>
      <style>
        #calendar {
          min-width: 600px;
          margin: 0 auto;
        }
        textarea#edit-event-info {
          width: 100%;
          height: 130px;
          margin-top: 10px;
        }
        #delete-link {
          margin-top: 10px;
          margin-left: 8px;
          display: inline-block;
        }
      </style>
      <div id='calendar'></div>

    </div>

  </div>

</div>

<div id="eventContent" title="Available" style="display:none;">
  <div class="eventInfo">
  </div>
</div>


<div id="edit-event-dialog-form" title="Create Availability" style="display: none;">
  <form>
  <fieldset>
    <textarea name="description" id="edit-event-info" class="text ui-widget-content ui-corner-all"></textarea>
  </fieldset>
  </form>
</div>

























